version: 2

aliases:
  - &env
    TERM: xterm-color
    THREADS: 1
    CABAL_JOBS: 1

    RUN_HADDOCK: "yes"
    RUN_LIBTESTS: "yes"
    RUN_CLASHDEV: "yes"
    RUN_TESTSUITE: "yes"
    RUN_BUILD_ALL: "yes"

    MULTIPLE_HIDDEN: "yes"

    # Used to detect partial evaluator branches on Gitlab CI
    CI_COMMIT_BRANCH: "xxxx"
  - &submodules
    run:
      name: "Checkout submodules"
      command: git submodule update --init
  - &setup
    run:
      name: Setup system
      command: |
        # Only test on external pull requests
        if [ -n "$CIRCLE_PR_NUMBER" ]; then
          .ci/setup.sh
        fi
  - &cache_calc_key
    run:
      name: Calculate cache key
      command: |
        date +%Y-%m > /.circleci_cachekey
        if [ -e /usr/bin/gcc ]; then /usr/bin/gcc --version >> /.circleci_cachekey; fi
        cat /.circleci_cachekey
  - &cache_restore
    restore_cache:
      keys:
        - cache-{{ checksum "/.circleci_cachekey" }}-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ .Revision }}
        - cache-{{ checksum "/.circleci_cachekey" }}-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-
        - cache-{{ checksum "/.circleci_cachekey" }}-{{ .Environment.CIRCLE_JOB }}-
  - &cache_save
    save_cache:
      key: cache-{{ checksum "/.circleci_cachekey" }}-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ .Revision }}
      paths:
        # Don't hit Ubuntu servers for same packages over and over
        - /var/cache/apt/
        # Don't hit cache.nixos.org for same packages over and over
        - /nix
        # Cache Clash dependencies
        - /root/.cabal
        # Cache dependencies and ghc binaries
        - /root/.stack

  - &build
    run:
      name: Build dependencies and Clash itself
      command: |
        # Only test on external pull requests
        if [ -n "$CIRCLE_PR_NUMBER" ]; then
          .ci/build.sh
        fi

  - &run_tests
    run:
      name: Run tests
      command: |
        # Only test on external pull requests
        if [ -n "$CIRCLE_PR_NUMBER" ]; then
          cabal v2-test clash-prelude
          cabal v2-test clash-lib
          cabal v2-test clash-cores
          cabal v2-test clash-cosim
          cabal v2-run clash-testsuite -- -j$THREADS --hide-successes -p .VHDL
          cabal v2-run clash-testsuite -- -j$THREADS --hide-successes -p .Verilog
        fi
      no_output_timeout: 1h

  # When testing a pull request on CircleCI,
  # fetch the result of merging it in.
  - &merge_pullrequest
    run:
      name: Checkout pull request merge result
      command: |
        if [ -n "$CIRCLE_PR_NUMBER" ]; then
          git fetch "$CIRCLE_REPOSITORY_URL" "pull/$CIRCLE_PR_NUMBER/merge:pull-$CIRCLE_PR_NUMBER-merged"
          git rev-parse "pull-$CIRCLE_PR_NUMBER-merged"
          git checkout "pull-$CIRCLE_PR_NUMBER-merged"
        fi

  - &build_default
    docker:
      - image: docker.pkg.github.com/clash-lang/clash-compiler/clash-ci-$GHC_VERSION:2021-06-01
        # Read-only permissions
        auth:
          username: clash-lang-builder
          password: $DOCKER_PASS
    steps:
      - checkout
      - *merge_pullrequest
      - *submodules
      - *setup
      - *cache_calc_key
      - *cache_restore
      - *build
      - *cache_save
      - *run_tests

workflows:
  version: 2
  build_and_test_clash:
    jobs:
      - ghc-8.6-singular-hidden
      # - ghc-8.6
      - ghc-8.8
      - ghc-8.10

jobs:
  ghc-8.6:
    environment:
      <<: *env
      GHC_VERSION: 8.6.5
    <<: *build_default
  ghc-8.8:
    environment:
      <<: *env
      GHC_VERSION: 8.8.4
    <<: *build_default
  ghc-8.10:
    environment:
      <<: *env
      GHC_VERSION: 8.10.4
    <<: *build_default
  ghc-8.6-singular-hidden:
    environment:
      <<: *env
      GHC_VERSION: 8.6.5
      MULTIPLE_HIDDEN: no
    <<: *build_default
