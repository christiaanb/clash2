include:
  - '/.ci/gitlab/common.yml'

stages:
  - build
  - test

.test-nocache:
  extends: .common
  needs: ["build"]
  stage: test
  cache:
    paths: []
  before_script:
    - unset SNAPCRAFT_LOGIN_FILE
    - unset HACKAGE_PASSWORD
    - export THREADS=$(./.ci/effective_cpus.sh)
    - export CABAL_JOBS=$(./.ci/effective_cpus.sh)
    - export clash_lib_datadir=$(pwd)/clash-lib/
    - export clash_cosim_datadir=$(pwd)/clash-cosim/
    - export
    - tar -xf dist.tar.zst -C /

    # Not all package in cache get packed into dist.tar.zst, so we need to
    # regenerate the package database
    - ghc-pkg recache --package-db=$HOME/.cabal/store/ghc-$GHC_VERSION/package.db
  after_script:

.test-cache-local:
  extends: .common-local
  needs: ["build"]
  stage: test
  before_script:
    - unset SNAPCRAFT_LOGIN_FILE
    - unset HACKAGE_PASSWORD
    - export THREADS=$(./.ci/effective_cpus.sh)
    - export CABAL_JOBS=$(./.ci/effective_cpus.sh)
    - export clash_lib_datadir=$(pwd)/clash-lib/
    - export clash_cosim_datadir=$(pwd)/clash-cosim/
    - export
    - tar -xf cache.tar.zst -C / || true
    - tar -xf dist.tar.zst -C /
    - .ci/setup.sh

    # Not all package in cache get packed into dist.tar.zst, so we need to
    # regenerate the package database
    - ghc-pkg recache --package-db=$HOME/.cabal/store/ghc-$GHC_VERSION/package.db
  after_script:
    - tar -cf - /root/.cabal/packages | zstd -T${THREADS} -3 > cache.tar.zst

<<<<<<< HEAD
<<<<<<< HEAD
.test-common:
  extends: .test-common-local
  # Run on shared runners
  # XXX: Temporarily on local runners
  #tags:
=======
.test-common-shared:
  extends:
    - .common
    - .test-common

.test-common-local:
  extends:
    - .common-local
    - .test-common
>>>>>>> 183909ac0 (GitLab CI: Refactor runner assignment)

=======
>>>>>>> 8969ecb41 (GitLab CI: avoid recompilation, use matrix)
# 'build' publishes its build files as an artifact. These build files are reused
# by 'prelude:doctests', 'prelude:unittests', 'lib:unittests'
# and 'suite-{verilog,vhdl}'.
build:
  extends: .common-local
  artifacts:
    when: always
    name: "$CI_JOB_NAME-$CI_COMMIT_SHA-$GHC_VERSION"
    paths:
      - dist.tar.zst
    expire_in: 1 day
  script:
    - .ci/build.sh

    # Archive all build files (from .cabal and dist-newstyle)
    - tar -cf - $(.ci/get_build_dist.sh) | zstd -T${THREADS} -15 > dist.tar.zst
<<<<<<< HEAD
  # XXX: Temporarily on local runners
  tags:
   - local
=======
>>>>>>> 183909ac0 (GitLab CI: Refactor runner assignment)

build-clash-dev:
  extends: .test-common
  script:
    - .ci/build_clash_dev.sh

cores:unittests:
  extends: .test-nocache
  script:
<<<<<<< HEAD
    - cabal v2-run clash-cores:unittests
=======
    - ./dist-newstyle/build/*/*/clash-cores-*/t/unittests/build/unittests/unittests --hide-successes
>>>>>>> 8969ecb41 (GitLab CI: avoid recompilation, use matrix)

cosim:unittests:
  extends: .test-nocache
  script:
<<<<<<< HEAD
    - cabal v2-run clash-cosim:tests
=======
    - ./dist-newstyle/build/*/*/clash-cosim-*/build/test/test
>>>>>>> 8969ecb41 (GitLab CI: avoid recompilation, use matrix)

prelude:unittests:
  extends: .test-nocache
  script:
<<<<<<< HEAD
<<<<<<< HEAD
    - cabal v2-run clash-prelude:unittests
=======
    - cabal v2-run -- clash-prelude:unittests --hide-successes
=======
    - ./dist-newstyle/build/*/*/clash-prelude-*/t/unittests/build/unittests/unittests --hide-successes
>>>>>>> 8969ecb41 (GitLab CI: avoid recompilation, use matrix)

lib:doctests:
  extends: .test-nocache
  script:
<<<<<<< HEAD
    - cabal v2-run -- clash-lib:doctests -j${THREADS}
>>>>>>> 183909ac0 (GitLab CI: Refactor runner assignment)
=======
    - ./dist-newstyle/build/*/*/clash-lib-*/t/doctests/build/doctests/doctests -j${THREADS}
>>>>>>> 8969ecb41 (GitLab CI: avoid recompilation, use matrix)

lib:unittests:
  extends: .test-nocache
  script:
<<<<<<< HEAD
    - cabal v2-run clash-lib:unittests
=======
    - ./dist-newstyle/build/*/*/clash-lib-*/t/unittests/build/unittests/unittests --hide-successes
>>>>>>> 8969ecb41 (GitLab CI: avoid recompilation, use matrix)

prelude:doctests:
  extends: .test-nocache
  script:
    - ./dist-newstyle/build/*/*/clash-prelude-*/t/doctests/build/doctests/doctests -j${THREADS}

# Tests run on local fast machines:
<<<<<<< HEAD
=======

# Normally, this job is small. But it is flaky on GHC 9.2; it sometimes fails
# and we don't know yet why. When it fails, it recompiles things it should have
# picked up from the 'build' issue and then it is a larger job, so we keep it on
# local runners for now.
build-clash-dev:
  extends: .test-cache-local
  script:
    - .ci/build_clash_dev.sh

>>>>>>> 8969ecb41 (GitLab CI: avoid recompilation, use matrix)
suite:vhdl:
  extends: .test-cache-local
  script:
<<<<<<< HEAD
    - cabal v2-run -- clash-testsuite -j$THREADS -p .VHDL --hide-successes
=======
    - ./dist-newstyle/build/*/*/clash-testsuite-*/x/clash-testsuite/build/clash-testsuite/clash-testsuite -j$THREADS -p .VHDL --hide-successes --no-vivado
>>>>>>> 8969ecb41 (GitLab CI: avoid recompilation, use matrix)

suite:verilog:
  extends: .test-cache-local
  script:
<<<<<<< HEAD
    - cabal v2-run -- clash-testsuite -j$THREADS -p .Verilog --hide-successes
=======
    - ./dist-newstyle/build/*/*/clash-testsuite-*/x/clash-testsuite/build/clash-testsuite/clash-testsuite -j$THREADS -p .Verilog --hide-successes --no-vivado
>>>>>>> 8969ecb41 (GitLab CI: avoid recompilation, use matrix)

suite:systemverilog:
  extends: .test-cache-local
  script:
<<<<<<< HEAD
    - cabal v2-run -- clash-testsuite -j$THREADS -p .SystemVerilog --hide-successes --no-modelsim
=======
    - ./dist-newstyle/build/*/*/clash-testsuite-*/x/clash-testsuite/build/clash-testsuite/clash-testsuite -j$THREADS -p .SystemVerilog --hide-successes --no-modelsim --no-vivado

# Vivado is quite slow, so we only run a subset of the tests on development branches
# with it. The full testsuite gets run with Vivado every night on 'master'.
suite:cores:
  extends: .test-cache-local
  script:
    - source /opt/tools/Xilinx/Vivado/2022.1/settings64.sh
    - ./dist-newstyle/build/*/*/clash-testsuite-*/x/clash-testsuite/build/clash-testsuite/clash-testsuite -j$THREADS -p Cores --hide-successes --no-modelsim --no-ghdl --no-iverilog --no-verilator --no-symbiyosys
  tags:
    - local
    - vivado-2022.1-standard


# Tests run on local fast machines with Vivado installed. We only run these at night
# to save resources - as Vivado is quite slow to execute.
.test-cache-local-nightly:
  extends: .test-cache-local
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"  # When schedueled (at night)
    - if: $CI_PIPELINE_SOURCE == "trigger"   # When triggered (manual triggers)
    - if: '$CI_COMMIT_TAG != null'           # When tags are set (releases)

suite:vivado:vhdl:
  extends: .test-cache-local-nightly
  script:
    - source /opt/tools/Xilinx/Vivado/2022.1/settings64.sh
    - ./dist-newstyle/build/*/*/clash-testsuite-*/x/clash-testsuite/build/clash-testsuite/clash-testsuite -j$THREADS -p .VHDL --hide-successes --no-modelsim --no-ghdl --no-iverilog --no-verilator --no-symbiyosys
  tags:
    - local
    - vivado-2022.1-standard

suite:vivado:verilog:
  extends: .test-cache-local-nightly
  script:
    - source /opt/tools/Xilinx/Vivado/2022.1/settings64.sh
    - ./dist-newstyle/build/*/*/clash-testsuite-*/x/clash-testsuite/build/clash-testsuite/clash-testsuite -j$THREADS -p .Verilog --hide-successes --no-modelsim --no-ghdl --no-iverilog --no-verilator --no-symbiyosys
  tags:
    - local
    - vivado-2022.1-standard
>>>>>>> 8969ecb41 (GitLab CI: avoid recompilation, use matrix)
