include:
  - '/.ci/gitlab/common.yml'
  - '/.ci/gitlab/publish.yml'
#   - '/.ci/gitlab/benchmark.yml'

# Default GHC / Cabal version. Used for generating Haddock and releasing to
# Hackage.
variables:
  GHC_VERSION: 8.10.3
  CABAL_VERSION: 3.2.0.0

stages:
  - pre
  - test
  - pack
  - pack-test
  - publish
  - post

# Triggers child pipelines that runs tests for various GHC and Cabal versions.
# Should be replaced by matrix builds in the future, but currently blocking on:
# https://gitlab.com/gitlab-org/gitlab/-/issues/270957
.common-trigger:
  stage: test
  needs: []
  trigger:
    include: .ci/gitlab/test.yml
    strategy: depend

tests-8.6:
  extends: .common-trigger
  variables:
    GHC_VERSION: 8.6.5
    CABAL_VERSION: 3.0.0.0
    MULTIPLE_HIDDEN: "no"

tests-8.8:
  extends: .common-trigger
  variables:
    GHC_VERSION: 8.8.4
    CABAL_VERSION: 3.2.0.0

tests-8.10:
  extends: .common-trigger
  variables:
    GHC_VERSION: 8.10.3
    CABAL_VERSION: 3.2.0.0

tests-9.0:
  extends: .common-trigger
  variables:
    GHC_VERSION: 9.0.1
    CABAL_VERSION: 3.4.0.0

stack-build:
  extends: .common
  needs: []
  stage: test
  variables:
    GHC_VERSION: 8.10.3
    CABAL_VERSION: 3.2.0.0
  script:
    - .ci/stack_build.sh
  # Run on shared runners
  tags:

nix-build:
  image: nixos/nix
  needs: []
  stage: test
  before_script:
    # Circle CI needs git/ssh in /usr/bin
    - nix-env -i git findutils gnugrep gnused coreutils openssh bash-4.4-p23 zstd

    #                                 bin         nix pkg        multiple may exist
    - ln -s $(find /nix -type f -name git  | grep libexec      | head -n1) /usr/bin
    - ln -s $(find /nix -type f -name ssh  | grep openssh      | head -n1) /usr/bin
    - ln -s $(find /nix -type f -name sed  | grep gnused       | head -n1) /usr/bin
    - ln -s $(find /nix -type f -name zstd | grep zstd         | head -n1) /usr/bin
    - ln -s $(find /nix -type f -name bash | grep bash-4.4-p23 | head -n1) /bin

  script:
    - .ci/nix_build.sh

# Tests run on shared runners:
haddock:
  extends: .common
  needs: []
  stage: test
  artifacts:
    paths:
      - hadocs/*/*
    expire_in: 1 month
  script:
    - .ci/build_docs.sh
  # Run on shared runners
  tags:

# # Run benchmarks for isclashfastyet.com
# benchmark-8.10.2:
#   extends: .benchmark

# "Publish" a release candidate
hackage-release-candidate:
  extends: .hackage

  variables:
    HACKAGE_RELEASE: "no"

  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "trigger"

# Release new version of Clash to Hackage
hackage-release:
  extends: .hackage

  variables:
    HACKAGE_RELEASE: "yes"

  rules:
    - if: '$CI_COMMIT_TAG != null' # tags

# Publish a release candidate (beta/edge) to snapcraft.io/clash
snap-beta-or-edge:
  extends: .snap
  variables:
    RELEASE_CHANNEL: beta_or_edge
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "trigger"

# Publish a new version to stable channel on snapcraft.io/clash
snap-stable:
  extends: .snap
  variables:
    RELEASE_CHANNEL: stable
  rules:
    - if: '$CI_COMMIT_TAG != null' # tags

# Work around https://gitlab.com/gitlab-org/gitlab/-/issues/216629
.github_status:
  image: curlimages/curl
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

set_pending:
  extends: .github_status
  stage: pre
  script:
    - .ci/set_github_status.sh pending

set_success:
  extends: .github_status
  stage: post
  when: on_success
  script:
    - .ci/set_github_status.sh success

set_failure:
  extends: .github_status
  stage: post
  when: on_failure
  script:
    - .ci/set_github_status.sh failure
